# Занятие 7. Списки
# Задача «Четные индексы»
# Условие
# Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).

a = input().split()
for i in range(len(a)):
    if i == 0 or i % 2 == 0:
        print(a[i])


# Занятие 7. Списки
# Задача «Четные элементы»
# Условие
# Выведите все четные элементы списка. При этом используйте цикл for,
# перебирающий элементы списка, а не их индексы!

a = input().split()
for i in a:
    if int(i) % 2 == 0:
        print(i)


# Занятие 7. Списки
# Задача «Больше предыдущего»
# Условие
# Дан список чисел. Выведите все элементы списка,
# которые больше предыдущего элемента.



a = input().split()
prev = int(a[0])
for i in a:
    if prev < int(i):
        print(i)
    prev = int(i)



# Занятие 7. Списки
# Задача «Соседи одного знака»
# Условие
# Дан список чисел. Если в нем есть два соседних элемента одного знака,
# выведите эти числа. Если соседних элементов одного знака нет — не выводите ничего.
# Если таких пар соседей несколько — выведите первую пару.


a = input().split()

count = 0
prev = 0
i = 0
while i <= len(a) - 2:
    if int(a[i]) > 0 and int(a[i + 1]) > 0:
        print(a[i], a[i + 1])
        break
    elif int(a[i]) < 0 and int(a[i + 1]) < 0:
        print(a[i], a[i + 1])
        break
    i += 1


# Занятие 7. Списки
# Задача «Больше своих соседей»
# Условие
# Дан список чисел. Определите, сколько в этом списке элементов,
# которые больше двух своих соседей, и выведите количество таких элементов.
# Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
#
#


a = input().split()

count = 0
prev = 0
i = 1
neib = 0
while i <= len(a) - 2:
    if int(a[i - 1]) < int(a[i]) and int(a[i]) > int(a[i + 1]):
        neib += 1

    i += 1
print(neib)


# Условие
# Дан список чисел. Выведите значение наибольшего элемента в списке,
# а затем индекс этого элемента в списке. Если наибольших элементов несколько,
# выведите индекс первого из них.


a = input().split()

index = 0
prev = int(a[0]) -1
current = 0
index2 = 0

for i in a:
    current = int(i)
    if current > prev:
        prev = current
        index2 = index
    index += 1
if current > prev:
    print(current, index2)
else:
    print(prev, index2)


# Занятие 7. Списки
# Задача «Шеренга»
# Условие
# Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю.
# Помогите ему это сделать.
# Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого
# человека в строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
#
# Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же,
# как у Пети, то он должен встать после них.
#


a = input().split()
b = int(input())
index = 0
new = []

for i in a:
    if int(i) >= b:
        new.append(i)
    index += 1
new.append(b)
print(new.index(b) + 1)

# Занятие 7. Списки
# Задача «Количество различных элементов»
# Условие
# Дан список, упорядоченный по неубыванию элементов в нем.
# Определите, сколько в нем различных элементов.

a = input().split()
prev = 0
current = 0
counter = 0
for i in a:
    current = int(i)
    if current != prev:
        prev = current
        counter += 1
print(counter)

#
# Занятие 7. Списки
# Задача «Переставить соседние»
# Условие
# Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.).
# Если элементов нечетное число, то последний элемент остается на своем месте.


a = input().split()
b = []

i = 1
while i < len(a):
    b.append(a[i])
    b.append(a[i - 1])
    i += 2
if len(a) % 2 != 0:
    b.append(a[len(a) - 1])
print(' '.join(b))


#
#
# Занятие 7. Списки
# Задача «Переставить min и max»
# Условие
# В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент
# этого списка.

a = [int(s) for s in input().split()]
mini = min(a)
minindex = a.index(min(a))
maxi = max(a)
maxindex = a.index(max(a))
a[minindex] = maxi
a[maxindex] = mini
print(str(a).replace(',', '')[1:-1])



# Занятие 7. Списки
# Задача «Удалить элемент»
# Условие
# Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k, сдвинув влево все элементы,
# стоящие правее элемента с индексом k.
# Программа получает на вход список, затем число k. Программа сдвигает все элементы, а после этого удаляет последний
# элемент списка при помощи метода pop() без параметров.
#
# Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя
# использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.

a = [int(s) for s in input().split()]
k = int(input())
for i in range(k + 1, len(a)):
    a[i - 1] = a[i]
a.pop()
print(str(a).replace(',', '')[1:-1])


# Занятие 7. Списки
# Задача «Вставить элемент»
# Условие
# Дан список целых чисел, число k и значение C. Необходимо вставить в список на позицию с индексом k элемент, равный C,
# сдвинув все элементы, имевшие индекс не менее k, вправо.
# Поскольку при этом количество элементов в списке увеличивается, после считывания списка в его конец нужно будет
# добавить новый элемент, используя метод append.
#
# Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая
# дополнительного списка.

a = [int(s) for s in input().split()]
k = [int(s) for s in input().split()]

temp = 0
a.append(k[1])
for i in reversed(range(k[0] + 1, len(a))):
    temp = a[i - 1]
    a[i - 1] = a[i]
    a[i] = temp

print(str(a).replace(',', '')[1:-1])


# Занятие 7. Списки
# Задача «Количество совпадающих пар»
# Условие
# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую
# необходимо посчитать.

a = [int(s) for s in input().split()]
counter = 0
for2 = 1
for i in a:
    # print(f'{i} i')
    for b in a[for2:]:
        # print(f'{b} b')
        if i == b:
            # print(counter)
            counter += 1
    for2 += 1
print(counter)



# Занятие 7. Списки
# Задача «Уникальные элементы»
# Условие
# Дан список. Выведите те его элементы, которые встречаются в списке только
# один раз. Элементы нужно выводить в том порядке, в котором они встречаются
# в списке.

a = [int(s) for s in input().split()]
result = []
for i in range(len(a)):
    if a.count(a[i]) == 1:
        result.append(a[i])
print(str(result).replace(',', '')[1:-1])


# Задача «Кегельбан»
# Условие
# N кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N. Затем по этому ряду бросили K шаров,
# при этом i-й шар сбил все кегли с номерами от li до ri включительно. Определите, какие кегли остались стоять на месте.
# Программа получает на вход количество кеглей N и количество бросков K. Далее идет K пар чисел li, ri,
# при этом 1≤ li≤ ri≤ N.
#
# Программа должна вывести последовательность из N символов, где j-й символ есть “I”, если j-я кегля осталась стоять,
# или “.”, если j-я кегля была сбита.

n, k = [int(s) for s in input().split()]
result = ['I'] * n
for i in range(k):
    a, b = [int(s) for s in input().split()]
    for j in range(a - 1, b):
        result[j] = '.'
print(''.join(result))


# Занятие 7. Списки
# Задача «Ферзи»
# Условие
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8 ферзей
# на доске, определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел, каждое число от 1 до 8 — координаты 8 ферзей. Если ферзи не бьют друг
# друга, выведите слово NO, иначе выведите YES.

n = 8
x = []
y = []
kill = 0
for i in range(n):
    x1, y1 = [int(s) for s in input().split()]
    x.append(x1)
    y.append(y1)
for i in range(n):
    for j in range(i + 1, n):
        if abs(x[i] - x[j]) == abs(y[i] - y[j]) or x[i] == x[j] or y[i] == y[j]:
            kill += 1
if kill != 0:
    print('YES')
else:
    print('NO')






















