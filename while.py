# Занятие 6. Цикл while
# Задача «Список квадратов»
# Условие
# По данному целому числу N распечатайте все квадраты натуральных чисел,
# не превосходящие N, в порядке возрастания.
import math
n = int(input('Введите число '))
i = 1
while i <= int(math.sqrt(n)):
    print(i * i)
    i += 1

# Занятие 6. Цикл while
# Задача «Список квадратов»
# Условие
# По данному целому числу N распечатайте все квадраты натуральных чисел,
# не превосходящие N, в порядке возрастания.

n = int(input('Введите число '))
i = int()
while i <= n:
    i = i + 1
    if n % i == 0 and i != 1:
        print(int(i))
        break


# Занятие 6. Цикл while
# Задача «Список квадратов»
# Условие
# По данному целому числу N распечатайте все квадраты натуральных чисел,
# не превосходящие N, в порядке возрастания.

n = int(input('Введите число '))
i = 0
a = 1

while a * 2 <= n:
    a *= 2
    i += 1
print(i, a)



# Цикл while
# Задача «Утренняя пробежка»
# Условие
# В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал
# пробег на 10% от предыдущего значения. По данному числу y определите номер дня,
# на который пробег спортсмена составит не менее y километров.
#
# Программа получает на вход действительные числа x и y и должна вывести одно
# натуральное число.

a = int(input())
b = int(input())
i = 1
while a < b:
    i += 1
    a += a / 100 * 10
print(i)




# Занятие 6. Цикл while
# Задача «Длина последовательности»
# Условие
# Программа получает на вход последовательность целых неотрицательных
# чисел, каждое число записано в отдельной строке. Последовательность
# завершается числом 0, при считывании которого программа должна закончить
# свою работу и вывести количество членов последовательности (не считая
# завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.


i = 0
while int(input()) !=0:
    i += 1
print(i)


# Занятие 6. Цикл while
# Задача «Длина последовательности»
# Условие
# Программа получает на вход последовательность целых неотрицательных
# чисел, каждое число записано в отдельной строке. Последовательность
# завершается числом 0, при считывании которого программа должна закончить
# свою работу и вывести количество членов последовательности (не считая
# завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
i = 1
result = int()
while i != 0:
    i = int(input())
    result += i
print(result)


# Занятие 6. Цикл while
# Задача «Среднее значение последовательности»
# Условие
# Определите среднее значение всех элементов
# последовательности, завершающейся числом 0.


a = 0
i = int(input())
result = 0
while i != 0:
    result += i
    i = int(input())
    a += 1
print(result / a)


# Занятие 6. Цикл while
# Задача «Максимум последовательности»
# Условие
# Последовательность состоит из натуральных чисел и завершается
# числом 0. Определите значение наибольшего элемента последовательности.


i = int(input())
result = 0
while i != 0:
    if i > result:
        result = i
    i = int(input())
print(result)

# Занятие 6. Цикл while
# Задача «Индекс максимума последовательности»
# Условие
# Последовательность состоит из натуральных чисел и
# завершается числом 0. Определите индекс наибольшего элемента
# последовательности. Если наибольших элементов несколько, выведите индекс
# первого из них. Нумерация элементов начинается с нуля.
a = 0
b = 0
i = int(input())
result = 0
while i != 0:
    if i > result:
        result = i
        b = a
    i = int(input())
    a += 1
print(b)

# Занятие 6. Цикл while
# Задача «Количество четных элементов последовательности»
# Условие
# Определите количество четных элементов в последовательности,
# завершающейся числом 0.
#

i = int(input())
result = 0
a = 0
while i != 0:
    if i % 2 == 0:
        result = i
        a += 1
    i = int(input())
print(a)


# Занятие 6. Цикл while
# Задача «Количество элементов, которые больше предыдущего»
# Условие
# Последовательность состоит из натуральных чисел и завершается числом 0.
# Определите, сколько элементов этой последовательности больше предыдущего элемента.
#

i = int(input())
result = i
maxi = 0
while i != 0:
    if i > result:
        maxi += 1
    result = i
    i = int(input())
print(maxi)

# Занятие 6. Цикл while
# Задача «Второй максимум»
# Условие
# Последовательность состоит из различных натуральных чисел и завершается числом 0.
# Определите значение второго по величине элемента в этой последовательности.
# Гарантируется, что в последовательности есть хотя бы два элемента.



i = int(input())
first = 0
second = 0
while i != 0:
    if i > first:
        second = first
        first = i
    elif i > second:
        second = i
    i = int(input())
print(second)



# Занятие 6. Цикл while
# Задача «Количество элементов, равных максимуму»
# Условие
# Последовательность состоит из натуральных чисел и завершается числом 0.
# Определите, сколько элементов этой последовательности равны ее наибольшему элементу.

i = int(input())
result = 0
count_max = 1
while i != 0:
    if i > result:
        result = i
        count_max = 1
    elif i == result:
        count_max += 1
    i = int(input())
print(count_max)



# Задача «Числа Фибоначчи»
# Условие
# Последовательность Фибоначчи определяется так:
# φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.
#
# По данному числу n определите n-е число Фибоначчи φn.
#
# Эту задачу можно решать и циклом for.

f1 = 1
f2 = 1
f = 0
n = int(input())

i = 0
if n > 2:
    while i < n - 2:
        f = f1 + f2
        f1 = f2
        f2 = f
        i = i + 1

    print(f)
elif n >= 1:
    f = 1
    print(f)
else:
    f = 0
    print(f)

    # Занятие 6. Цикл while
    # Задача «Номер числа Фибоначчи»
    # Условие
    # Дано натуральное число A. Определите,
    # каким по счету числом Фибоначчи оно является, то есть выведите такое число n,
    # что φn = A. Если А не является числом Фибоначчи, выведите число -1.

    n = int(input())
    f = 0
    a = 1
    b = 1
    i = 0
    while f <= n:
        a = f
        f = b + f
        b = a
        i += 1
        if n == f:
            print(i)
            break
    if n < 0 or n != f:
        print(-1)
    elif n == 0:
        print(0)


# Занятие 6. Цикл while
# Задача «Максимальное число идущих подряд равных элементов»
# Условие
# Дана последовательность натуральных чисел, завершающаяся числом 0. Определите,
# какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.


i = int(input())
result = 0
count_max = 1
maxi = 0
while i != 0:
    if i == result:
        count_max += 1
        if count_max > maxi:
            maxi = count_max
    elif i != result:
        if count_max > maxi:
            maxi = count_max
        count_max = 1
        result = i
    i = int(input())
print(maxi)



#
# Занятие 6. Цикл while
# Задача «Стандартное отклонение»
# Условие
# Дана последовательность натуральных чисел x1, x2, ..., xn. Стандартным отклонением называется величина
# σ=(x1−s)2+(x2−s)2+…+(xn−s)2n−1‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾√
# где s=x1+x2+…+xnn — среднее арифметическое последовательности.
#
# Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся

i = int(input())
n = 0
sum1 = 0
sum2 = 0

while i != 0:
    n += 1
    sum1 += i
    sum2 += i ** 2
    i = int(input())
print(((sum2 - sum1 ** 2 / n) /(n - 1)) ** 0.5)










